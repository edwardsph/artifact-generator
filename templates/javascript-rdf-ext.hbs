const { LitVocabTerm } = require('@lit/vocab-term')

/**
  Generated by ontology generator [${generatorClassname}]
  from the source RDF file [${sourceRdfResource}]
  at '${generatedTimestamp}'.
{{#if description}}

  {{{description}}}
{{/if}}
 */

const _NAMESPACE = "{{namespace}}";
function _NS (localName) { return (_NAMESPACE + localName) }

const {{vocabNameUpperCase}} = {
  NAMESPACE: _NAMESPACE,
  NS: _NS,

{{#if classes}}
    // *****************
    // All the Classes.
    // *****************
    {{#each classes}}
    
    /**
     *{{#if comment}} {{{comment}}}{{/if}}
     */
    {{name}}: new LitVocabTerm(_NS('{{name}}'), localStorage, true)
{{#each labels}}
      .addLabel('{{language}}', '{{value}}')
{{/each}}
{{#each comments}}
      .addComment('{{language}}', `{{value}}`)
{{/each}},
    {{/each}}
{{/if}}

{{#if properties}}
    // *******************
    // All the Properties.
    // *******************
    {{#each properties}}

    /**
     *{{#if comment}} {{{comment}}}{{/if}}
     */
    {{name}}: new LitVocabTerm(_NS('{{name}}'), localStorage, true)
{{#each labels}}
      .addLabel('{{language}}', '{{value}}')
{{/each}}
{{#each comments}}
      .addComment('{{language}}', `{{value}}`)
{{/each}},
    {{/each}}
{{/if}}

{{#if literals}}
    // *******************
    // All the Literals.
    // *******************
    {{#each literals}}

    /**
     *{{#if comment}} {{{comment}}}{{/if}}
     */
    {{name}}: new LitVocabTerm(_NS('{{name}}'), localStorage, true)
{{#each labels}}
      .addLabel('{{language}}', '{{value}}')
{{/each}}
{{#each comments}}
      .addComment('{{language}}', `{{value}}`)
{{/each}}
{{#each definitions}}
      .addMessage('{{language}}', `{{value}}`)
{{/each}},
    {{/each}}
{{/if}}
  //
  // Marker allowing us put commas at the end of all lines above (only the last line does not have a comma).
  //
  END_OF_VOCAB: 'End of vocab.'
}

module.exports = {{vocabNameUpperCase}};
