/**
 * Generated by artifact generator [{{generatorName}}], version [{{artifactGeneratorVersion}}]
 * as part of artifact: [{{artifactName}}], version: [{{artifactVersion}}]
 * on '{{generatedTimestamp}}'.
 *
 * {{sourceRdfResources}}
 */
package {{javaPackageName}};

import org.eclipse.rdf4j.model.IRI;
import org.eclipse.rdf4j.model.Namespace;
import org.eclipse.rdf4j.model.impl.SimpleNamespace;
import org.eclipse.rdf4j.model.impl.SimpleValueFactory;

import com.pmcb55.lit.vocab.LitVocab;
import com.pmcb55.lit.vocab.LitVocabTerm;

/**
{{#if description}}
 * {{{description}}}
{{/if}}
 */
public class {{vocabNameUpperCase}} implements LitVocab {
    public static final String PREFIX = "{{vocabPrefix}}";
    public static final String NAMESPACE = "{{namespace}}";

    public static final IRI NAMESPACE_IRI = SimpleValueFactory.getInstance().createIRI("{{namespace}}");
    public static final Namespace NS = new SimpleNamespace(PREFIX, NAMESPACE);

    @Override
    public final IRI getNamespaceIri() {
        return NAMESPACE_IRI;
    }

    private static String FULL_IRI(final String localName) {
        return NAMESPACE + localName;
    }

{{#if classes}}
    // *****************
    // All the Classes.
    // *****************
    {{#each classes}}

    /**
     *{{#if comment}} {{{comment}}}{{/if}}
     */
    public static final LitVocabTerm {{nameEscapedForLanguage}} = new LitVocabTerm(FULL_IRI("{{{name}}}"), true){{#each labels}}
      .addLabel("{{language}}", "{{{valueEscapedForJava}}}"){{/each}}{{#each comments}}
      .addComment("{{language}}", "{{{valueEscapedForJava}}}"){{/each}};
{{/each}}
{{/if}}

{{#if properties}}
    // *******************
    // All the Properties.
    // *******************
    {{#each properties}}

    /**
     *{{#if comment}} {{{comment}}}{{/if}}
     */
    public static final LitVocabTerm {{nameEscapedForLanguage}} = new LitVocabTerm(FULL_IRI("{{{name}}}"), true){{#each labels}}
      .addLabel("{{language}}", "{{{valueEscapedForJava}}}"){{/each}}{{#each comments}}
      .addComment("{{language}}", "{{{valueEscapedForJava}}}"){{/each}};
{{/each}}
{{/if}}

{{#if literals}}
    // *******************
    // All the Literals.
    // *******************
    {{#each literals}}

    /**
     *{{#if comment}} {{{comment}}}{{/if}}
     */
    public static final LitVocabTerm {{nameEscapedForLanguage}} = new LitVocabTerm(FULL_IRI("{{{name}}}"), true){{#each labels}}
      .addLabel("{{language}}", "{{{valueEscapedForJava}}}"){{/each}}{{#each comments}}
      .addComment("{{language}}", "{{{valueEscapedForJava}}}"){{/each}}{{#each definitions}}
      .addMessage("{{language}}", "{{{valueEscapedForJava}}}"){{/each}};
{{/each}}
{{/if}}
}
