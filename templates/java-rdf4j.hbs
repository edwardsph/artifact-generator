package {{javaPackageName}};

import org.eclipse.rdf4j.model.IRI;
import org.eclipse.rdf4j.model.impl.SimpleValueFactory;

import org.pmcb55.lit.vocabTerm.LitVocab;
import org.pmcb55.lit.vocabTerm.LitVocabTerm;

/**
 * Generated by artifact generator [{{generatorName}}], version [{{generatorVersion}}]
 * as part of artifact: [{{artifactName}}], version: [{{artifactVersion}}]
 * at '{{generatedTimestamp}}'.
 *
 * {{sourceRdfResources}}
{{#if description}}
 *
 * {{{description}}}
{{/if}}
 */
public class {{vocabNameUpperCase}} implements LitVocab {
    public static final String PREFIX = "{{vocabPrefix}}";
    public static final String NAMESPACE = "{{namespace}}";

    public static final IRI NAMESPACE_IRI = SimpleValueFactory.getInstance().createIRI("{{namespace}}");

    @Override
    public final IRI getNamespaceIri() {
        return NAMESPACE_IRI;
    }

    private static String _NS(final String localName) {
        return NAMESPACE + localName;
    }

{{#if classes}}
    // *****************
    // All the Classes.
    // *****************
    {{#each classes}}

    /**
     *{{#if comment}} {{{comment}}}{{/if}}
     */
    public static final LitVocabTerm {{nameEscapedForLanguage}} = new LitVocabTerm(_NS("{{{name}}}"), "<Context>", true){{#each labels}}
      .addLabel("{{language}}", "{{{valueEscapedForJava}}}"){{/each}}{{#each comments}}
      .addComment("{{language}}", "{{{valueEscapedForJava}}}"){{/each}};
{{/each}}
{{/if}}

{{#if properties}}
    // *******************
    // All the Properties.
    // *******************
    {{#each properties}}

    /**
     *{{#if comment}} {{{comment}}}{{/if}}
     */
    public static final LitVocabTerm {{nameEscapedForLanguage}} = new LitVocabTerm(_NS("{{{name}}}"), "<Context>", true){{#each labels}}
      .addLabel("{{language}}", "{{{valueEscapedForJava}}}"){{/each}}{{#each comments}}
      .addComment("{{language}}", "{{{valueEscapedForJava}}}"){{/each}};
{{/each}}
{{/if}}

{{#if literals}}
    // *******************
    // All the Literals.
    // *******************
    {{#each literals}}

    /**
     *{{#if comment}} {{{comment}}}{{/if}}
     */
    public static final LitVocabTerm {{nameEscapedForLanguage}} = new LitVocabTerm(_NS("{{{name}}}"), "<Context>", true){{#each labels}}
      .addLabel("{{language}}", "{{{valueEscapedForJava}}}"){{/each}}{{#each comments}}
      .addComment("{{language}}", "{{{valueEscapedForJava}}}"){{/each}}{{#each definitions}}
      .addMessage("{{language}}", "{{{valueEscapedForJava}}}"){{/each}};
{{/each}}
{{/if}}
}
